# DataSource configuration for the default datasource
quarkus.datasource.db-kind=postgresql
quarkus.datasource.jdbc.url=jdbc:postgresql://${POSTGRESQL_SERVICE_HOST:localhost}:${POSTGRESQL_SERVICE_PORT:5432}/quarkusdb
quarkus.datasource.username=quarkus
quarkus.datasource.password=quarkus

# Connection pool settings for Agroal (these are correctly prefixed for JDBC)
quarkus.datasource.jdbc.initial-size=1
quarkus.datasource.jdbc.min-size=2
quarkus.datasource.jdbc.max-size=8

# These Hibernate ORM properties are still correct as they are
quarkus.hibernate-orm.sql-load-script=import.sql
quarkus.hibernate-orm.schema-management.strategy=drop-and-create
quarkus.hibernate-orm.log.sql=true

# For DB Health check
db.host=${POSTGRESQL_SERVICE_HOST:localhost}
db.port=${POSTGRESQL_SERVICE_PORT:5432}

# 10485760 = 10 MB
health.memory.free-threshold-bytes=10485760
health.readiness.lock-file-path=/opt/my-app/data/maintenance.lock

# Tracing -> Jaeger
# Sets the service name for OpenTelemetry traces
#quarkus.application.name=quarkus-service
#
## Configures the OpenTelemetry OTLP (OpenTelemetry Protocol) exporter endpoint
## This is typically the OpenTelemetry Collector or directly to a compatible backend
## quarkus.opentelemetry.traces.exporter=otlp
## quarkus.opentelemetry.traces.exporter.otlp.endpoint=http://localhost:4317
#
#quarkus.opentelemetry.traces.exporter=zipkin
#quarkus.opentelemetry.traces.exporter.zipkin.endpoint=http://localhost:9411/api/v2/spans
#
## OpenTelemetry sampling configuration (example for always-on sampling)
#quarkus.opentelemetry.traces.sampler.type=always_on

#quarkus.application.name=quarkus-service
#quarkus.opentelemetry.traces.exporter=otlp
#quarkus.opentelemetry.traces.exporter.otlp.endpoint=http://localhost:4317
#quarkus.opentelemetry.traces.sampler.type=always_on

# Elytron security configuration for username/password against a database table
#quarkus.security.jdbc.enabled=true
#quarkus.security.jdbc.principal-query.sql=SELECT u.password, u.role FROM quarkus_user u WHERE u.username=?
#quarkus.security.jdbc.principal-query.clear-password-mapper.enabled=true
#quarkus.security.jdbc.principal-query.clear-password-mapper.password-index=1
#quarkus.security.jdbc.principal-query.attribute-mappings.0.index=2
#quarkus.security.jdbc.principal-query.attribute-mappings.0.to=groups

# ? Enable OpenID Connect security
quarkus.oidc.enabled=true
quarkus.oidc.auth-server-url=http://localhost:8180/realms/quarkus-realm
quarkus.oidc.client-id=quarkus-client
quarkus.oidc.credentials.secret=testsecret
#quarkus.oidc.token.issuer=quarkus-realm

# ? CORS to allow frontend communication
quarkus.http.cors=true
quarkus.http.cors.origins=http://localhost:8080,http://localhost:8081,http://localhost:8180
quarkus.http.cors.methods=GET,POST,PUT,DELETE,OPTIONS
quarkus.http.cors.headers=Authorization,Content-Type

# ? JWT verification and issuer
mp.jwt.verify.publickey.location=${quarkus.oidc.auth-server-url}/protocol/openid-connect/certs
mp.jwt.verify.issuer=${quarkus.oidc.auth-server-url}

# ? Allow GET access for customers to both user and admin
quarkus.http.auth.permission.customers-read.paths=/customers/*
quarkus.http.auth.permission.customers-read.methods=GET
quarkus.http.auth.permission.customers-read.policy=customers-read-policy
quarkus.http.auth.policy.customers-read-policy.roles-allowed=user,admin

# ? Restrict POST, PUT, DELETE for customers to admin only
quarkus.http.auth.permission.customers-write.paths=/customers/*
quarkus.http.auth.permission.customers-write.methods=POST,PUT,DELETE
quarkus.http.auth.permission.customers-write.policy=customers-write-policy
quarkus.http.auth.policy.customers-write-policy.roles-allowed=admin

# ? Allow GET access to both user and admin for orders
quarkus.http.auth.permission.orders-read.paths=/orders/*
quarkus.http.auth.permission.orders-read.methods=GET
quarkus.http.auth.permission.orders-read.policy=order-read-policy
quarkus.http.auth.policy.order-read-policy.roles-allowed=user,admin

# ? Restrict POST, PUT, DELETE access on orders to admin only
quarkus.http.auth.permission.orders-write.paths=/orders/*
quarkus.http.auth.permission.orders-write.methods=POST,PUT,DELETE
quarkus.http.auth.permission.orders-write.policy=order-write-policy
quarkus.http.auth.policy.order-write-policy.roles-allowed=admin
